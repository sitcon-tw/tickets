---
import * as i18n from "src/i18n";
import SITCONLogo from "@assets/img/SITCON.svg";
const l = i18n.l(Astro.url);
const t = i18n.t(i18n.local(Astro.url.pathname), {
	about: {
		en: "About",
		"zh-Hant": "關於",
		"zh-Hans": "关于"
	},
	blog: {
		en: "Blog",
		"zh-Hant": "部落格",
		"zh-Hans": "博客"
	}
});
---

<nav>
	<div>
		<a href={l("/")}><img src={SITCONLogo.src} alt="SITCON Logo" /></a>
		<div class="right">
			<div id="auth-menu">
				<a href={l("/login/")} id="login-link">登入</a>
				<div id="user-menu" style="display: none;">
					<span id="user-name">載入中...</span>
					<a href={l("/admin/")} id="admin-link" style="display: none;">管理員頁面</a>
					<a href="#" id="logout-link">登出</a>
				</div>
			</div>
		</div>
		<!-- <a href={l("/about/")}><span>{t.about}</span></a> -->

		<!-- <div>
		<a href={l("", "en")} data-lang="en">English</a>
		<a href={l("", "zh-Hant")} data-lang="zh-Hant">繁體中文</a>
		<a href={l("", "zh-Hans")} data-lang="zh-Hans">简体中文</a>
	</div> -->
	</div>
	<slot />
</nav>

<style>
	nav {
		position: fixed;
		top: 0;
		left: 0;
		z-index: 1000;
		background-color: var(--color-gray-900);
		width: 100%;
		transition: border-color 0.3s ease-in-out;
		border-bottom: transparent solid 1px;
	}

	nav.scrolled {
		border-color: var(--color-gray-500);
	}
	nav > div {
		display: flex;
		align-items: center;
		justify-content: space-between;
		width: 100%;
		transition: padding 0.3s ease-in-out;
	}
	nav.scrolled > div {
		padding: 1rem;
	}

	nav .right {
		display: flex;
		align-items: center;
		gap: 1.5rem;
	}

	#user-menu {
		display: flex;
		align-items: center;
		gap: 1rem;
	}

	#user-name {
		font-weight: bold;
		color: var(--color-primary, #007acc);
	}

	a {
		text-decoration: none;
	}
</style>

<script>
	//after scroll 5px, add class scrolled to nav
	window.addEventListener("scroll", () => {
		const nav = document.querySelector("nav");
		if (window.scrollY > 5) {
			nav.classList.add("scrolled");
		} else {
			nav.classList.remove("scrolled");
		}
	});

	// Check authentication status
	async function checkAuthStatus() {
		try {
			const response = await fetch('http://localhost:3000/api/auth/get-session', {
				credentials: 'include'
			});
			
			const loginLink = document.getElementById('login-link');
			const userMenu = document.getElementById('user-menu');
			const userName = document.getElementById('user-name');
			const adminLink = document.getElementById('admin-link');
			const logoutLink = document.getElementById('logout-link');
			
			if (response.ok) {
				const session = await response.json();
				
				if (session && session.user) {
					// User is authenticated
					loginLink.style.display = 'none';
					userMenu.style.display = 'flex';
					userName.textContent = session.user.name || session.user.email || '使用者';
					
					// Show admin link if user has admin role
					if (session.user.role && (session.user.role.includes('admin') || session.user.role.includes('super-admin'))) {
						adminLink.style.display = 'block';
					}
					
					// Handle logout
					logoutLink.addEventListener('click', async (e) => {
						e.preventDefault();
						try {
							await fetch('http://localhost:3000/api/auth/sign-out', {
								method: 'POST',
								credentials: 'include'
							});
							window.location.reload();
						} catch (error) {
							console.error('Logout failed:', error);
						}
					});
				}
			}
		} catch (error) {
			console.error('Auth status check failed:', error);
			// Show login link on error
		}
	}
	
	// Initialize auth check on page load
	document.addEventListener('DOMContentLoaded', checkAuthStatus);
</script>
